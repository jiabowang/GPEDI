"GPEDI.inbreeding" <-function(data,
	target0
	)
	{

	file = data
	target=file[,1]
	target = na.omit(target)
	g=0
	E=target0
	for(i in 1:length(target))
	{
	s=E
	if(s%in%file[,1]&!is.na(target0))
		{
		 search.result=file[file[,1]%in%s,]
		 g=g+1 
		 E=search.result[1,3]#
		}else{
			 g=g
			 }
	}
	gener = g
	tar.s=file[file[,1]%in%target0,3]
	tar.d=file[file[,1]%in%target0,4]
	cross.generation=FALSE
	inbreed=matrix(NA,gener,2^(gener-1))
	inbreed[1,1]=target0
	
	for(i in 1:(gener-1))
	{
		search.store=inbreed[i,!is.na(inbreed[i,])]
		search.num=length(search.store)
		for(j in 1:search.num)
		{
			if(search.store[j]%in%file[,1])
			{	
			   search.result=file[file[,1]%in%search.store[j],]
			}else{
			   search.result=matrix(NA,1,4)
			}
			inbreed[i+1,2*j-1]=search.result[1,3]
			inbreed[i+1,2*j]=search.result[1,4]
		
		}
	}

	line=list()
	mm=0
	if(cross.generation)
	{
	 print("This function is pending ...")
	}else{
	   for(i in 2:gener)
	   {
		  search.store=as.character(inbreed[i,!is.na(inbreed[i,])])
		  dup.id=unique(search.store[duplicated(search.store)])
		  if(length(dup.id)>0)
		  {
			 for(dup in 1:length(dup.id))
			 {
				dup.index=grep(dup.id[dup],search.store)
				dup.num=length(dup.index)
				for(m in 1:dup.num)
				{
					mm=mm+1
					line[[mm]]=inbreed[i,dup.index[m]]
				}
				for(j in (i-1):2)
				{
				   dup.index.2=ceiling(dup.index/2)
				   for(m in 1:dup.num)
				   {
					line[[mm-m+1]]=append(line[[mm-m+1]],inbreed[j,dup.index.2[m]])
				   }
				   dup.index=dup.index.2
				}
			 }
			
			 
		  }else{
			 next
		  } 

	   }


	}


	n=length(line)
	    if(n!=0){
				 first.id=NULL
				 for(i in 1:n)
				 {
				  first.id=append(first.id,line[[i]][1])
				 }
				 last.id=NULL
				 for(i in 1:n)
				 {
				  last.id=append(last.id,line[[i]][length(line[[i]])])
				 }
				 table.matrix=as.matrix(table(last.id))
				if(length(table.matrix)!=1)
					 {
					 as.matrix(table.matrix[order(table.matrix[,1]),])    
					 min.id=rownames(table.matrix)[1]
					 max.id=rownames(table.matrix)[2]
					 min.num=as.numeric(table.matrix[min.id,])
					 max.num=as.numeric(table.matrix[max.id,])
					 whole.line=list()
					 mm=0
					 for(i in 1:min.num)
					 {
					  min.index=grep(min.id,last.id)[i]
					  min.first=line[[min.index]][1]
						last.id.2=last.id
						last.id.2[!first.id%in%min.first]=NA
						last.id.2[min.index]=NA
						max.index=grep(max.id,last.id.2)
						for(k in max.index)
						{
						  max.line=line[[k]]
						  max.line2=NULL
						  for(f in length(max.line):1)
						  {
							max.line2=append(max.line2,max.line[f])
						  }
						  mm=mm+1
						  whole.line[[mm]]=append(max.line2,line[[min.index]][-1])
						}
					  
					 }
					if(!is.null(whole.line)){
						 x=0
						 i=1
						 for(i in (1:length(whole.line))){
										  T1=whole.line[[i]]
										  x1=(1/2)^length(T1)
										  i=1+1
										  x=x+x1
										  }
										  return(x)
						 }else{
							   x=0
							  }
					
					
					}else{
						 x=0
						 }
				}else{
						 x=0
						 }
return(x)
}
